name: Process Models

on:
  schedule:
    - cron: '0 * * * *'  # 毎時0分に実行（必要に応じて変更してください）
  workflow_dispatch:  # 手動実行も可能にする

permissions:
  issues: write           # Issueの書き込み権限
  contents: write         # リポジトリコンテンツへの書き込み権限
  pull-requests: write    

jobs:
  process_models:
    runs-on: ubuntu-latest

    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4.2.2

      # === Docker Buildx のセットアップ ===
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.8.0

      # === Docker キャッシュの復元 ===
      - name: キャッシュの復元
        id: cache-docker
        uses: actions/cache@v4.2.0
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # === Docker イメージのビルド ===
      - name: Dockerイメージのビルド
        uses: docker/build-push-action@v6.10.0
        with:
          context: .
          file: ./Dockerfile
          tags: model-processor:latest
          load: true  # ローカルにイメージをロード
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # === Docker キャッシュの保存 ===
      - name: キャッシュの保存
        if: always()
        uses: actions/cache@v4.2.0
        with:
          path: /tmp/.buildx-cache-new
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: モデルの処理（Dockerコンテナ内で実行）
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        run: |
          docker run --rm \
            -e HF_TOKEN \
            -e GITHUB_TOKEN \
            -e REPOSITORY \
            -e RUN_ID \
            model-processor \
            python process_issues.py "$REPOSITORY" "$RUN_ID"

      - name: 完了メッセージ
        run: echo "モデルの処理が完了しました。"